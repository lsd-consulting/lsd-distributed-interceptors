dependencies {
    testImplementation project(":core")
    testImplementation project(":feign")
    testImplementation project(":spring-web")
    testImplementation project(":rabbitmq")

    // Spring
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-amqp'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Db
    testImplementation 'com.zaxxer:HikariCP:5.1.0'
    testImplementation "org.testcontainers:postgresql:1.18.3"
    testImplementation "org.testcontainers:junit-jupiter:1.18.3"
    testImplementation 'org.postgresql:postgresql:42.6.0'

    // Other
    testImplementation 'com.github.fridujo:rabbitmq-mock:1.1.1'
    testImplementation 'org.awaitility:awaitility:4.1.0'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.2'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.9.2'
    testImplementation 'org.jeasy:easy-random-core:5.0.0'

    // LSD
    testImplementation 'io.github.lsd-consulting:lsd-distributed-postgres-connector:1.0.20'
    testImplementation 'io.github.lsd-consulting:lsd-junit5:6.0.12'
    testImplementation 'io.github.lsd-consulting:lsd-distributed-generator:7.1.1'
    testImplementation 'io.github.lsd-consulting:lsd-logging-library:1.0.19'
}

test {
    useJUnitPlatform()
    testLogging.events("skipped", "failed")
    systemProperty("lsd.core.report.outputDir", "${layout.buildDirectory.get().toString()}/reports/lsd")
    afterSuite { desc, result ->
        if (!desc.parent) {
            logger.lifecycle("Integration Postgres test results: (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)")
            if (result.testCount == 0) {
                throw new IllegalStateException("No tests were found. Failing the build")
            }
        }
    }
}
